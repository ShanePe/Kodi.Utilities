using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Kodi.Utilities.Playlist;
using Kodi.Utilities.Collection;
using Kodi.Utilities.Playlist.Fields;

namespace Kodi.Utilities.Test
{
    [TestClass]
    public class PlaylistTest
    {
        private RuleCollection GetRulesForType(SmartPlayList.Types type)
        {
            SmartPlayList playlist = new SmartPlayList("Test")
            {
                Type = type
            };

            return playlist.GetAvailableFields();
        }

        [TestMethod]
        public void TestSongs()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.Songs);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNotNull(rules[typeof(Album)]);
            Assert.IsNotNull(rules[typeof(Artist)]);
            Assert.IsNotNull(rules[typeof(Albumartist)]);
            Assert.IsNotNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNotNull(rules[typeof(Time)]);
            Assert.IsNotNull(rules[typeof(Trackint)]);
            Assert.IsNotNull(rules[typeof(Filename)]);
            Assert.IsNotNull(rules[typeof(Path)]);
            Assert.IsNotNull(rules[typeof(Playcount)]);
            Assert.IsNotNull(rules[typeof(Lastplayed)]);
            Assert.IsNull(rules[typeof(Inprogress)]);
            Assert.IsNotNull(rules[typeof(Rating)]);
            Assert.IsNotNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNull(rules[typeof(Plot)]);
            Assert.IsNull(rules[typeof(Plotoutline)]);
            Assert.IsNull(rules[typeof(Tagline)]);
            Assert.IsNull(rules[typeof(Mpaarating)]);
            Assert.IsNull(rules[typeof(Top250)]);
            Assert.IsNull(rules[typeof(Status)]);
            Assert.IsNull(rules[typeof(Votes)]);
            Assert.IsNull(rules[typeof(Director)]);
            Assert.IsNull(rules[typeof(Actor)]);
            Assert.IsNull(rules[typeof(Studio)]);
            Assert.IsNull(rules[typeof(Country)]);
            Assert.IsNull(rules[typeof(Numepisodes)]);
            Assert.IsNull(rules[typeof(Numwatched)]);
            Assert.IsNull(rules[typeof(Writers)]);
            Assert.IsNull(rules[typeof(AirDateTime)]);
            Assert.IsNull(rules[typeof(Episode)]);
            Assert.IsNull(rules[typeof(Season)]);
            Assert.IsNull(rules[typeof(Tvshow)]);
            Assert.IsNull(rules[typeof(Episodetitle)]);
            Assert.IsNull(rules[typeof(Review)]);
            Assert.IsNull(rules[typeof(Themes)]);
            Assert.IsNull(rules[typeof(Moods)]);
            Assert.IsNull(rules[typeof(Styles)]);
            Assert.IsNull(rules[typeof(MediaType)]);
            Assert.IsNull(rules[typeof(Label)]);
            Assert.IsNull(rules[typeof(Hastrailer)]);
            Assert.IsNull(rules[typeof(Videoresolution)]);
            Assert.IsNull(rules[typeof(Audiochannels)]);
            Assert.IsNull(rules[typeof(Videocodec)]);
            Assert.IsNull(rules[typeof(Audiocodec)]);
            Assert.IsNull(rules[typeof(Audiolanguage)]);
            Assert.IsNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNull(rules[typeof(Videoaspect)]);
            Assert.IsNull(rules[typeof(Set)]);
            Assert.IsNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestAlbums()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.Albums);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNotNull(rules[typeof(Album)]);
            Assert.IsNotNull(rules[typeof(Artist)]);
            Assert.IsNotNull(rules[typeof(Albumartist)]);
            Assert.IsNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNull(rules[typeof(Time)]);
            Assert.IsNull(rules[typeof(Trackint)]);
            Assert.IsNull(rules[typeof(Filename)]);
            Assert.IsNull(rules[typeof(Path)]);
            Assert.IsNull(rules[typeof(Playcount)]);
            Assert.IsNull(rules[typeof(Lastplayed)]);
            Assert.IsNull(rules[typeof(Inprogress)]);
            Assert.IsNotNull(rules[typeof(Rating)]);
            Assert.IsNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNull(rules[typeof(Plot)]);
            Assert.IsNull(rules[typeof(Plotoutline)]);
            Assert.IsNull(rules[typeof(Tagline)]);
            Assert.IsNull(rules[typeof(Mpaarating)]);
            Assert.IsNull(rules[typeof(Top250)]);
            Assert.IsNull(rules[typeof(Status)]);
            Assert.IsNull(rules[typeof(Votes)]);
            Assert.IsNull(rules[typeof(Director)]);
            Assert.IsNull(rules[typeof(Actor)]);
            Assert.IsNull(rules[typeof(Studio)]);
            Assert.IsNull(rules[typeof(Country)]);
            Assert.IsNull(rules[typeof(Numepisodes)]);
            Assert.IsNull(rules[typeof(Numwatched)]);
            Assert.IsNull(rules[typeof(Writers)]);
            Assert.IsNull(rules[typeof(AirDateTime)]);
            Assert.IsNull(rules[typeof(Episode)]);
            Assert.IsNull(rules[typeof(Season)]);
            Assert.IsNull(rules[typeof(Tvshow)]);
            Assert.IsNull(rules[typeof(Episodetitle)]);
            Assert.IsNotNull(rules[typeof(Review)]);
            Assert.IsNotNull(rules[typeof(Themes)]);
            Assert.IsNotNull(rules[typeof(Moods)]);
            Assert.IsNotNull(rules[typeof(Styles)]);
            Assert.IsNotNull(rules[typeof(MediaType)]);
            Assert.IsNotNull(rules[typeof(Label)]);
            Assert.IsNull(rules[typeof(Hastrailer)]);
            Assert.IsNull(rules[typeof(Videoresolution)]);
            Assert.IsNull(rules[typeof(Audiochannels)]);
            Assert.IsNull(rules[typeof(Videocodec)]);
            Assert.IsNull(rules[typeof(Audiocodec)]);
            Assert.IsNull(rules[typeof(Audiolanguage)]);
            Assert.IsNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNull(rules[typeof(Videoaspect)]);
            Assert.IsNull(rules[typeof(Set)]);
            Assert.IsNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestArtist()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.Artists);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNull(rules[typeof(Album)]);
            Assert.IsNotNull(rules[typeof(Artist)]);
            Assert.IsNull(rules[typeof(Albumartist)]);
            Assert.IsNull(rules[typeof(Title)]);
            Assert.IsNull(rules[typeof(Year)]);
            Assert.IsNull(rules[typeof(Time)]);
            Assert.IsNull(rules[typeof(Trackint)]);
            Assert.IsNull(rules[typeof(Filename)]);
            Assert.IsNull(rules[typeof(Path)]);
            Assert.IsNull(rules[typeof(Playcount)]);
            Assert.IsNull(rules[typeof(Lastplayed)]);
            Assert.IsNull(rules[typeof(Inprogress)]);
            Assert.IsNull(rules[typeof(Rating)]);
            Assert.IsNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNull(rules[typeof(Plot)]);
            Assert.IsNull(rules[typeof(Plotoutline)]);
            Assert.IsNull(rules[typeof(Tagline)]);
            Assert.IsNull(rules[typeof(Mpaarating)]);
            Assert.IsNull(rules[typeof(Top250)]);
            Assert.IsNull(rules[typeof(Status)]);
            Assert.IsNull(rules[typeof(Votes)]);
            Assert.IsNull(rules[typeof(Director)]);
            Assert.IsNull(rules[typeof(Actor)]);
            Assert.IsNull(rules[typeof(Studio)]);
            Assert.IsNull(rules[typeof(Country)]);
            Assert.IsNull(rules[typeof(Numepisodes)]);
            Assert.IsNull(rules[typeof(Numwatched)]);
            Assert.IsNull(rules[typeof(Writers)]);
            Assert.IsNull(rules[typeof(AirDateTime)]);
            Assert.IsNull(rules[typeof(Episode)]);
            Assert.IsNull(rules[typeof(Season)]);
            Assert.IsNull(rules[typeof(Tvshow)]);
            Assert.IsNull(rules[typeof(Episodetitle)]);
            Assert.IsNull(rules[typeof(Review)]);
            Assert.IsNull(rules[typeof(Themes)]);
            Assert.IsNotNull(rules[typeof(Moods)]);
            Assert.IsNotNull(rules[typeof(Styles)]);
            Assert.IsNull(rules[typeof(MediaType)]);
            Assert.IsNull(rules[typeof(Label)]);
            Assert.IsNull(rules[typeof(Hastrailer)]);
            Assert.IsNull(rules[typeof(Videoresolution)]);
            Assert.IsNull(rules[typeof(Audiochannels)]);
            Assert.IsNull(rules[typeof(Videocodec)]);
            Assert.IsNull(rules[typeof(Audiocodec)]);
            Assert.IsNull(rules[typeof(Audiolanguage)]);
            Assert.IsNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNull(rules[typeof(Videoaspect)]);
            Assert.IsNull(rules[typeof(Set)]);
            Assert.IsNull(rules[typeof(Tag)]);
            Assert.IsNotNull(rules[typeof(Instruments)]);
            Assert.IsNotNull(rules[typeof(Biography)]);
            Assert.IsNotNull(rules[typeof(Born)]);
            Assert.IsNotNull(rules[typeof(Bandformed)]);
            Assert.IsNotNull(rules[typeof(Disbanded)]);
            Assert.IsNotNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestMovies()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.Movies);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNull(rules[typeof(Album)]);
            Assert.IsNull(rules[typeof(Artist)]);
            Assert.IsNull(rules[typeof(Albumartist)]);
            Assert.IsNotNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNotNull(rules[typeof(Time)]);
            Assert.IsNull(rules[typeof(Trackint)]);
            Assert.IsNotNull(rules[typeof(Filename)]);
            Assert.IsNotNull(rules[typeof(Path)]);
            Assert.IsNotNull(rules[typeof(Playcount)]);
            Assert.IsNotNull(rules[typeof(Lastplayed)]);
            Assert.IsNotNull(rules[typeof(Inprogress)]);
            Assert.IsNotNull(rules[typeof(Rating)]);
            Assert.IsNull(rules[typeof(Comment)]);
            Assert.IsNotNull(rules[typeof(DateTimeadded)]);
            Assert.IsNotNull(rules[typeof(Plot)]);
            Assert.IsNotNull(rules[typeof(Plotoutline)]);
            Assert.IsNotNull(rules[typeof(Tagline)]);
            Assert.IsNotNull(rules[typeof(Mpaarating)]);
            Assert.IsNotNull(rules[typeof(Top250)]);
            Assert.IsNull(rules[typeof(Status)]);
            Assert.IsNotNull(rules[typeof(Votes)]);
            Assert.IsNotNull(rules[typeof(Director)]);
            Assert.IsNotNull(rules[typeof(Actor)]);
            Assert.IsNotNull(rules[typeof(Studio)]);
            Assert.IsNotNull(rules[typeof(Country)]);
            Assert.IsNull(rules[typeof(Numepisodes)]);
            Assert.IsNull(rules[typeof(Numwatched)]);
            Assert.IsNotNull(rules[typeof(Writers)]);
            Assert.IsNull(rules[typeof(AirDateTime)]);
            Assert.IsNull(rules[typeof(Episode)]);
            Assert.IsNull(rules[typeof(Season)]);
            Assert.IsNull(rules[typeof(Tvshow)]);
            Assert.IsNull(rules[typeof(Episodetitle)]);
            Assert.IsNull(rules[typeof(Review)]);
            Assert.IsNull(rules[typeof(Themes)]);
            Assert.IsNull(rules[typeof(Moods)]);
            Assert.IsNull(rules[typeof(Styles)]);
            Assert.IsNull(rules[typeof(MediaType)]);
            Assert.IsNull(rules[typeof(Label)]);
            Assert.IsNotNull(rules[typeof(Hastrailer)]);
            Assert.IsNotNull(rules[typeof(Videoresolution)]);
            Assert.IsNotNull(rules[typeof(Audiochannels)]);
            Assert.IsNotNull(rules[typeof(Videocodec)]);
            Assert.IsNotNull(rules[typeof(Audiocodec)]);
            Assert.IsNotNull(rules[typeof(Audiolanguage)]);
            Assert.IsNotNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNotNull(rules[typeof(Videoaspect)]);
            Assert.IsNotNull(rules[typeof(Set)]);
            Assert.IsNotNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestTVShows()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.TVShows);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNull(rules[typeof(Album)]);
            Assert.IsNull(rules[typeof(Artist)]);
            Assert.IsNull(rules[typeof(Albumartist)]);
            Assert.IsNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNull(rules[typeof(Time)]);
            Assert.IsNull(rules[typeof(Trackint)]);
            Assert.IsNull(rules[typeof(Filename)]);
            Assert.IsNotNull(rules[typeof(Path)]);
            Assert.IsNotNull(rules[typeof(Playcount)]);
            Assert.IsNull(rules[typeof(Lastplayed)]);
            Assert.IsNull(rules[typeof(Inprogress)]);
            Assert.IsNotNull(rules[typeof(Rating)]);
            Assert.IsNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNotNull(rules[typeof(Plot)]);
            Assert.IsNull(rules[typeof(Plotoutline)]);
            Assert.IsNull(rules[typeof(Tagline)]);
            Assert.IsNotNull(rules[typeof(Mpaarating)]);
            Assert.IsNull(rules[typeof(Top250)]);
            Assert.IsNotNull(rules[typeof(Status)]);
            Assert.IsNotNull(rules[typeof(Votes)]);
            Assert.IsNotNull(rules[typeof(Director)]);
            Assert.IsNotNull(rules[typeof(Actor)]);
            Assert.IsNotNull(rules[typeof(Studio)]);
            Assert.IsNull(rules[typeof(Country)]);
            Assert.IsNotNull(rules[typeof(Numepisodes)]);
            Assert.IsNotNull(rules[typeof(Numwatched)]);
            Assert.IsNull(rules[typeof(Writers)]);
            Assert.IsNull(rules[typeof(AirDateTime)]);
            Assert.IsNull(rules[typeof(Episode)]);
            Assert.IsNull(rules[typeof(Season)]);
            Assert.IsNotNull(rules[typeof(Tvshow)]);
            Assert.IsNull(rules[typeof(Episodetitle)]);
            Assert.IsNull(rules[typeof(Review)]);
            Assert.IsNull(rules[typeof(Themes)]);
            Assert.IsNull(rules[typeof(Moods)]);
            Assert.IsNull(rules[typeof(Styles)]);
            Assert.IsNull(rules[typeof(MediaType)]);
            Assert.IsNull(rules[typeof(Label)]);
            Assert.IsNull(rules[typeof(Hastrailer)]);
            Assert.IsNull(rules[typeof(Videoresolution)]);
            Assert.IsNull(rules[typeof(Audiochannels)]);
            Assert.IsNull(rules[typeof(Videocodec)]);
            Assert.IsNull(rules[typeof(Audiocodec)]);
            Assert.IsNull(rules[typeof(Audiolanguage)]);
            Assert.IsNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNull(rules[typeof(Videoaspect)]);
            Assert.IsNull(rules[typeof(Set)]);
            Assert.IsNotNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestEpisodes()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.Episodes);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNull(rules[typeof(Album)]);
            Assert.IsNull(rules[typeof(Artist)]);
            Assert.IsNull(rules[typeof(Albumartist)]);
            Assert.IsNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNotNull(rules[typeof(Time)]);
            Assert.IsNull(rules[typeof(Trackint)]);
            Assert.IsNotNull(rules[typeof(Filename)]);
            Assert.IsNotNull(rules[typeof(Path)]);
            Assert.IsNotNull(rules[typeof(Playcount)]);
            Assert.IsNotNull(rules[typeof(Lastplayed)]);
            Assert.IsNotNull(rules[typeof(Inprogress)]);
            Assert.IsNotNull(rules[typeof(Rating)]);
            Assert.IsNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNotNull(rules[typeof(Plot)]);
            Assert.IsNull(rules[typeof(Plotoutline)]);
            Assert.IsNull(rules[typeof(Tagline)]);
            Assert.IsNotNull(rules[typeof(Mpaarating)]);
            Assert.IsNull(rules[typeof(Top250)]);
            Assert.IsNull(rules[typeof(Status)]);
            Assert.IsNotNull(rules[typeof(Votes)]);
            Assert.IsNotNull(rules[typeof(Director)]);
            Assert.IsNotNull(rules[typeof(Actor)]);
            Assert.IsNotNull(rules[typeof(Studio)]);
            Assert.IsNull(rules[typeof(Country)]);
            Assert.IsNull(rules[typeof(Numepisodes)]);
            Assert.IsNull(rules[typeof(Numwatched)]);
            Assert.IsNotNull(rules[typeof(Writers)]);
            Assert.IsNotNull(rules[typeof(AirDateTime)]);
            Assert.IsNotNull(rules[typeof(Episode)]);
            Assert.IsNotNull(rules[typeof(Season)]);
            Assert.IsNotNull(rules[typeof(Tvshow)]);
            Assert.IsNotNull(rules[typeof(Episodetitle)]);
            Assert.IsNull(rules[typeof(Review)]);
            Assert.IsNull(rules[typeof(Themes)]);
            Assert.IsNull(rules[typeof(Moods)]);
            Assert.IsNull(rules[typeof(Styles)]);
            Assert.IsNull(rules[typeof(MediaType)]);
            Assert.IsNull(rules[typeof(Label)]);
            Assert.IsNull(rules[typeof(Hastrailer)]);
            Assert.IsNotNull(rules[typeof(Videoresolution)]);
            Assert.IsNotNull(rules[typeof(Audiochannels)]);
            Assert.IsNotNull(rules[typeof(Videocodec)]);
            Assert.IsNotNull(rules[typeof(Audiocodec)]);
            Assert.IsNotNull(rules[typeof(Audiolanguage)]);
            Assert.IsNotNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNotNull(rules[typeof(Videoaspect)]);
            Assert.IsNull(rules[typeof(Set)]);
            Assert.IsNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestMusicVideos()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.MusicVideos);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNotNull(rules[typeof(Album)]);
            Assert.IsNotNull(rules[typeof(Artist)]);
            Assert.IsNotNull(rules[typeof(Albumartist)]);
            Assert.IsNotNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNotNull(rules[typeof(Time)]);
            Assert.IsNull(rules[typeof(Trackint)]);
            Assert.IsNotNull(rules[typeof(Filename)]);
            Assert.IsNotNull(rules[typeof(Path)]);
            Assert.IsNotNull(rules[typeof(Playcount)]);
            Assert.IsNotNull(rules[typeof(Lastplayed)]);
            Assert.IsNull(rules[typeof(Inprogress)]);
            Assert.IsNull(rules[typeof(Rating)]);
            Assert.IsNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNotNull(rules[typeof(Plot)]);
            Assert.IsNull(rules[typeof(Plotoutline)]);
            Assert.IsNull(rules[typeof(Tagline)]);
            Assert.IsNull(rules[typeof(Mpaarating)]);
            Assert.IsNull(rules[typeof(Top250)]);
            Assert.IsNull(rules[typeof(Status)]);
            Assert.IsNull(rules[typeof(Votes)]);
            Assert.IsNotNull(rules[typeof(Director)]);
            Assert.IsNull(rules[typeof(Actor)]);
            Assert.IsNotNull(rules[typeof(Studio)]);
            Assert.IsNull(rules[typeof(Country)]);
            Assert.IsNull(rules[typeof(Numepisodes)]);
            Assert.IsNull(rules[typeof(Numwatched)]);
            Assert.IsNull(rules[typeof(Writers)]);
            Assert.IsNull(rules[typeof(AirDateTime)]);
            Assert.IsNull(rules[typeof(Episode)]);
            Assert.IsNull(rules[typeof(Season)]);
            Assert.IsNull(rules[typeof(Tvshow)]);
            Assert.IsNull(rules[typeof(Episodetitle)]);
            Assert.IsNull(rules[typeof(Review)]);
            Assert.IsNull(rules[typeof(Themes)]);
            Assert.IsNull(rules[typeof(Moods)]);
            Assert.IsNull(rules[typeof(Styles)]);
            Assert.IsNull(rules[typeof(MediaType)]);
            Assert.IsNull(rules[typeof(Label)]);
            Assert.IsNull(rules[typeof(Hastrailer)]);
            Assert.IsNotNull(rules[typeof(Videoresolution)]);
            Assert.IsNotNull(rules[typeof(Audiochannels)]);
            Assert.IsNotNull(rules[typeof(Videocodec)]);
            Assert.IsNotNull(rules[typeof(Audiocodec)]);
            Assert.IsNotNull(rules[typeof(Audiolanguage)]);
            Assert.IsNotNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNotNull(rules[typeof(Videoaspect)]);
            Assert.IsNull(rules[typeof(Set)]);
            Assert.IsNotNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);
        }

        [TestMethod]
        public void TestMixed()
        {
            RuleCollection rules = GetRulesForType(SmartPlayList.Types.Mixed);

            Assert.IsNotNull(rules[typeof(Genre)]);
            Assert.IsNotNull(rules[typeof(Album)]);
            Assert.IsNotNull(rules[typeof(Artist)]);
            Assert.IsNotNull(rules[typeof(Albumartist)]);
            Assert.IsNotNull(rules[typeof(Title)]);
            Assert.IsNotNull(rules[typeof(Year)]);
            Assert.IsNotNull(rules[typeof(Time)]);
            Assert.IsNotNull(rules[typeof(Trackint)]);
            Assert.IsNotNull(rules[typeof(Filename)]);
            Assert.IsNotNull(rules[typeof(Path)]);
            Assert.IsNotNull(rules[typeof(Playcount)]);
            Assert.IsNotNull(rules[typeof(Lastplayed)]);
            Assert.IsNotNull(rules[typeof(Inprogress)]);
            Assert.IsNotNull(rules[typeof(Rating)]);
            Assert.IsNotNull(rules[typeof(Comment)]);
            Assert.IsNull(rules[typeof(DateTimeadded)]);
            Assert.IsNotNull(rules[typeof(Plot)]);
            Assert.IsNotNull(rules[typeof(Plotoutline)]);
            Assert.IsNotNull(rules[typeof(Tagline)]);
            Assert.IsNotNull(rules[typeof(Mpaarating)]);
            Assert.IsNotNull(rules[typeof(Top250)]);
            Assert.IsNotNull(rules[typeof(Status)]);
            Assert.IsNotNull(rules[typeof(Votes)]);
            Assert.IsNotNull(rules[typeof(Director)]);
            Assert.IsNotNull(rules[typeof(Actor)]);
            Assert.IsNotNull(rules[typeof(Studio)]);
            Assert.IsNotNull(rules[typeof(Country)]);
            Assert.IsNotNull(rules[typeof(Numepisodes)]);
            Assert.IsNotNull(rules[typeof(Numwatched)]);
            Assert.IsNotNull(rules[typeof(Writers)]);
            Assert.IsNotNull(rules[typeof(AirDateTime)]);
            Assert.IsNotNull(rules[typeof(Episode)]);
            Assert.IsNotNull(rules[typeof(Season)]);
            Assert.IsNotNull(rules[typeof(Tvshow)]);
            Assert.IsNotNull(rules[typeof(Episodetitle)]);
            Assert.IsNotNull(rules[typeof(Review)]);
            Assert.IsNotNull(rules[typeof(Themes)]);
            Assert.IsNotNull(rules[typeof(Moods)]);
            Assert.IsNotNull(rules[typeof(Styles)]);
            Assert.IsNotNull(rules[typeof(MediaType)]);
            Assert.IsNotNull(rules[typeof(Label)]);
            Assert.IsNotNull(rules[typeof(Hastrailer)]);
            Assert.IsNotNull(rules[typeof(Videoresolution)]);
            Assert.IsNotNull(rules[typeof(Audiochannels)]);
            Assert.IsNotNull(rules[typeof(Videocodec)]);
            Assert.IsNotNull(rules[typeof(Audiocodec)]);
            Assert.IsNotNull(rules[typeof(Audiolanguage)]);
            Assert.IsNotNull(rules[typeof(Subtitlelanguage)]);
            Assert.IsNotNull(rules[typeof(Videoaspect)]);
            Assert.IsNotNull(rules[typeof(Set)]);
            Assert.IsNotNull(rules[typeof(Tag)]);
            Assert.IsNull(rules[typeof(Instruments)]);
            Assert.IsNull(rules[typeof(Biography)]);
            Assert.IsNull(rules[typeof(Born)]);
            Assert.IsNull(rules[typeof(Bandformed)]);
            Assert.IsNull(rules[typeof(Disbanded)]);
            Assert.IsNull(rules[typeof(Died)]);
            Assert.IsNotNull(rules[typeof(PlayList)]);



        }
    }
}
